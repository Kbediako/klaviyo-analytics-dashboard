name: Debug Workflow

on:
  # Manual trigger with configurable options
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to debug'
        required: true
        default: 'main'
      verbose_logging:
        description: 'Enable verbose logging'
        type: boolean
        default: true
      test_scope:
        description: 'Test scope'
        type: choice
        options:
          - full
          - backend
          - frontend
          - database
          - api
        default: 'full'
  
  # Automatic triggers
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  
  push:
    branches: [main, develop, feature/**, bugfix/**]
  
  # Scheduled runs for regular testing
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday at midnight UTC

jobs:
  debug_test:
    name: Debug Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm install
          cd backend && npm ci
      
      - name: Setup debug environment
        run: |
          mkdir -p logs screenshots test-reports
          echo "DEBUG=true" >> $GITHUB_ENV
          echo "VERBOSE_LOGGING=true" >> $GITHUB_ENV
          echo "DEBUG_LEVEL=verbose" >> $GITHUB_ENV
      
      # Run backend tests
      - name: Run backend tests
        run: |
          cd backend
          npm test -- --verbose
        env:
          NODE_ENV: test
      
      # Run browser tests
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
      
      - name: Run browser tests
        run: |
          # Install puppeteer
          npm install --save-dev puppeteer
          
          # Start the application in the background
          npm run dev &
          sleep 10
          
          # Run a simple test
          node -e "
            const puppeteer = require('puppeteer');
            
            async function runTest() {
              const browser = await puppeteer.launch({
                headless: 'new',
                executablePath: process.env.CHROME_BIN || null,
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              });
              
              const page = await browser.newPage();
              await page.goto('http://localhost:3000');
              
              console.log('Page loaded successfully');
              
              await page.screenshot({ path: 'screenshots/homepage.png' });
              await browser.close();
            }
            
            runTest().catch(err => {
              console.error('Test failed:', err);
              process.exit(1);
            });
          "
          
          # Kill the background process
          kill $(jobs -p) || true
      
      # Upload artifacts
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            screenshots/
          retention-days: 14
      
      # Notify on completion
      - name: Notify on completion
        run: |
          echo "Debug workflow completed!"

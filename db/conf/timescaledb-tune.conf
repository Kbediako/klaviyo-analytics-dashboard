# TimescaleDB optimized configuration for analytics workloads
# Automatically loaded by TimescaleDB container

# Memory Settings
# These settings are optimized for a server with 8GB RAM dedicated to PostgreSQL
# Adjust based on actual server resources
shared_buffers = '2GB'               # 25% of available RAM, recommended for TimescaleDB
work_mem = '64MB'                    # For complex queries and sorts
maintenance_work_mem = '256MB'       # For maintenance operations
effective_cache_size = '6GB'         # Estimate of how much memory is available for disk caching

# Query Planner Settings
random_page_cost = 1.1               # Lower value for SSD storage
effective_io_concurrency = 200       # Higher value for SSD storage
default_statistics_target = 500      # Higher for better query plans with complex queries

# Write Ahead Log (WAL) Settings
wal_buffers = '16MB'                 # For high write throughput
max_wal_size = '2GB'                 # Allow more WAL before checkpoint
min_wal_size = '1GB'
checkpoint_completion_target = 0.9   # Complete checkpoint over more of the interval
checkpoint_timeout = '15min'         # Longer checkpoints for better performance

# Background Writer Settings
bgwriter_delay = '200ms'
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0

# Connection Settings
max_connections = 200                # Adjust based on expected connection load
tcp_keepalives_idle = 60
tcp_keepalives_interval = 10
tcp_keepalives_count = 6

# Parallel Query Settings
max_worker_processes = 8             # Based on CPU cores
max_parallel_workers_per_gather = 4  # Based on half CPU cores
max_parallel_workers = 8             # Based on CPU cores
parallel_setup_cost = 1000
parallel_tuple_cost = 0.1
min_parallel_table_scan_size = '8MB'
min_parallel_index_scan_size = '512kB'

# TimescaleDB Specific Settings
timescaledb.max_background_workers = 8
timescaledb.telemetry_level = 'basic'
timescaledb.max_insert_batch_size = 10000
timescaledb.enable_chunk_append = 'on'
timescaledb.enable_constraint_aware_append = 'on'
timescaledb.enable_ordered_append = 'on'
timescaledb.enable_transparent_decompression = 'on'

# Query Execution Settings
enable_partitionwise_join = on
enable_partitionwise_aggregate = on
jit = off                           # Turn off JIT to make query plans more predictable

# Statement Timeout
statement_timeout = '300s'          # 5 minutes - prevents runaway queries
idle_in_transaction_session_timeout = '60s'  # Detect idle transactions
lock_timeout = '30s'                # Detect deadlocks

# Logging
log_min_duration_statement = 1000   # Log statements taking more than 1 second
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0     # Log all autovacuum activity

# Autovacuum Settings - Optimized for TimescaleDB
autovacuum_max_workers = 4
autovacuum_vacuum_scale_factor = 0.05   # More aggressive for large tables
autovacuum_analyze_scale_factor = 0.02  # More aggressive for large tables
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_cost_delay = 10ms
autovacuum_vacuum_cost_limit = 2000